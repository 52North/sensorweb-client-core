/*! n52-sensorweb-client-core.0.1.0 */
angular.module("n52.core.listSelection",["n52.core.interface","n52.core.status"]).controller("ListSelectionButtonCtrl",["$scope","$modal",function(a,b){a.openListSelection=function(){b.open({animation:!0,templateUrl:"templates/listSelection/modal-list-selection.html",controller:"ModalListSelectionCtrl"})}}]).controller("ModalListSelectionCtrl",["$scope","$modalInstance",function(a,b){a.modalInstance=b,a.categoryParams=[{type:"category",header:"listSelection.headers.category"},{type:"feature",header:"listSelection.headers.station"},{type:"phenomenon",header:"listSelection.headers.phenomenon"},{type:"procedure",header:"listSelection.headers.procedure"}],a.stationParams=[{type:"feature",header:"listSelection.headers.station"},{type:"category",header:"listSelection.headers.category"},{type:"phenomenon",header:"listSelection.headers.phenomenon"},{type:"procedure",header:"listSelection.headers.procedure"}],a.phenomenonParams=[{type:"phenomenon",header:"listSelection.headers.phenomenon"},{type:"category",header:"listSelection.headers.category"},{type:"feature",header:"listSelection.headers.station"},{type:"procedure",header:"listSelection.headers.procedure"}],a.close=function(){b.close()}}]).directive("swcListSelection",["interfaceService","statusService","timeseriesService","$location",function(a,b,c,d){return{restrict:"E",templateUrl:"templates/listSelection/accordion-list-selection.html",scope:{parameters:"="},controller:["$scope",function(e){angular.forEach(e.parameters,function(a,b){e.$watch("parameters["+b+"].isOpen",function(a,c){a&&(e.selectedParameterIndex=b,angular.forEach(e.parameters,function(a,c){c>b&&(a.isDisabled=!0,delete a.selectedId,delete a.items),c>=b&&delete a.headerAddition}))})}),e.createParams=function(){var a={service:b.status.apiProvider.serviceID};return angular.forEach(e.parameters,function(b){b.selectedId&&(a[b.type]=b.selectedId)}),a},e.getItems=function(c){"category"===c.type?a.getCategories(null,b.status.apiProvider.url,e.createParams()).success(function(a){c.items=a}):"feature"===c.type?a.getFeatures(null,b.status.apiProvider.url,e.createParams()).success(function(a){c.items=a}):"phenomenon"===c.type?a.getPhenomena(null,b.status.apiProvider.url,e.createParams()).success(function(a){c.items=a}):"procedure"===c.type&&a.getProcedures(null,b.status.apiProvider.url,e.createParams()).success(function(a){c.items=a})},e.openNext=function(a){e.parameters[a].isDisabled=!1,e.selectedParameterIndex=a,e.parameters[a].isOpen=!0,e.getItems(e.parameters[a])},e.openItem=function(a){e.parameters[e.selectedParameterIndex].selectedId=a.id,e.parameters[e.selectedParameterIndex].headerAddition=a.label,e.selectedParameterIndex<e.parameters.length-1?e.openNext(e.selectedParameterIndex+1):(c.addTimeseriesById(null,b.status.apiProvider.url,e.createParams()),d.url("/diagram"),e.$parent.modalInstance.close())},e.openNext(0)}]}}]),angular.module("n52.core.locate",["n52.core.station"]).controller("SwcLocateButtonCtrl",["$scope","locateService",function(a,b){a.isToggled=!1,a.locateUser=function(){a.isToggled=!a.isToggled,b.locate(a.isToggled)}}]).factory("locateService",["leafletData","settingsService",function(a,b){var c,d=b.locateIconOptions?L.icon(b.locateIconOptions):new L.Icon.Default;return a.getMap().then(function(a){a.on("locationfound",function(b){removeMarker(a),c=L.marker(b.latlng,{icon:d}).addTo(a)})}),locate=function(b){a.getMap().then(function(a){b?a.locate({watch:!0,setView:!0,maxZoom:a.getZoom()}):(a.stopLocate(),removeMarker(a))})},removeMarker=function(a){angular.isDefined(c)&&a.removeLayer(c)},{locate:locate}}]),angular.module("n52.core.map",["leaflet-directive","n52.core.interface","n52.core.status","n52.core.phenomena","n52.core.provider","n52.core.station","n52.core.listSelection","n52.core.locate"]).controller("BasicMapController",["$scope","mapService","leafletData","$log","$translate","$compile","$rootScope",function(a,b,c,d,e,f,g){a.map=b.map,e(["map.search.label","map.search.noResult"]).then(function(a){c.getMap().then(function(b){new L.Control.GeoSearch({url:"http://nominatim.openstreetmap.org/search?format=json&q={s}",jsonpParam:"json_callback",propertyName:"display_name",searchLabel:a["map.search.label"],notFoundMessage:a["map.search.noResult"],propertyLoc:["lat","lon"],position:"topcenter",minLength:2,showMarker:!1,provider:new L.GeoSearch.Provider.OpenStreetMap,zoomLevel:13}).addTo(b)})}),g.$on("resizeMap",function(){c.getMap().then(function(a){a.invalidateSize(!1)})}),a.$watch("map.popup",function(b){angular.isDefined(b)&&b.latlng&&c.getMap().then(function(c){var d=angular.element(b.content),e=f(d),g=a.$new();angular.extend(g,b.scope);var h=e(g)[0];L.popup().setLatLng(b.latlng).setContent(h).openOn(c)})},!0)}]).controller("SwcZoomControlsCtrl",["$scope","mapService",function(a,b){a.zoomIn=function(){b.map.center.zoom=b.map.center.zoom+1},a.zoomOut=function(){b.map.center.zoom=b.map.center.zoom-1}}]).controller("SwcMapLayerCtrl",["$scope",function(a){a.isToggled=!1,a.openMenu=function(){a.isToggled=!0},a.closeMenu=function(){a.isToggled=!1}}]).controller("SwcBaseLayerCtrl",["$scope","mapService","leafletData",function(a,b,c){c.getMap().then(function(a){c.getLayers().then(function(c){angular.forEach(c.baselayers,function(c,d){a.hasLayer(c)&&(b.map.layers.baselayers[d].visible=!0)})})}),a.baseLayers=b.map.layers.baselayers,a.switchVisibility=function(a){angular.forEach(b.map.layers.baselayers,function(b,c){c===a?b.visible=!0:b.visible=!1}),c.getMap().then(function(b){c.getLayers().then(function(c){angular.forEach(c.baselayers,function(a){b.removeLayer(a)}),angular.isDefined(c.baselayers[a])&&b.addLayer(c.baselayers[a])})})}}]).controller("SwcOverlayCtrl",["$scope","mapService",function(a,b){a.baseLayers=b.map.layers.overlays,a.switchVisibility=function(a){a.visible=!a.visible}}]).factory("mapService",["$rootScope","leafletBoundsHelpers","interfaceService","statusService","settingsService","$translate","$http","$location",function(a,b,c,d,e,f,g,h){var i=e.stationIconOptions?e.stationIconOptions:{},j={},k=function(){j.markers={},j.paths={},j.popup={},j.bounds={},j.center={},j.layers={baselayers:{osm:{name:"Open Street Map",type:"xyz",url:"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",layerOptions:{showOnSelector:!0}},mapbox_light:{name:"Mapbox Light",url:"http://api.tiles.mapbox.com/v4/{mapid}/{z}/{x}/{y}.png?access_token={apikey}",type:"xyz",layerOptions:{apikey:"pk.eyJ1IjoiYnVmYW51dm9scyIsImEiOiJLSURpX0pnIn0.2_9NrLz1U9bpwMQBhVk97Q",mapid:"bufanuvols.lia22g09"}},cycle:{name:"OpenCycleMap",type:"xyz",url:"http://{s}.tile.opencyclemap.org/cycle/{z}/{x}/{y}.png",layerOptions:{subdomains:["a","b","c"],attribution:'&copy; <a href="http://www.opencyclemap.org/copyright">OpenCycleMap</a> contributors - &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',continuousWorld:!0}}},overlays:{cluster:{name:"Stations",type:"markercluster",visible:!0,layerOptions:{showOnSelector:!1}},hillshade:{name:"Hillshade Europa",type:"wms",url:"http://129.206.228.72/cached/hillshade",visible:!1,layerOptions:{layers:"europe_wms:hs_srtm_europa",format:"image/png",opacity:.25,attribution:"Hillshade layer by GIScience http://www.osm-wms.de",crs:L.CRS.EPSG900913}}}},a.$on("allPhenomenaSelected",function(a){j.selectedPhenomenonId=null,l()}),a.$on("phenomenonSelected",function(a,b){j.selectedPhenomenonId=b.id,l(b.id)}),a.$on("newProviderSelected",function(a){l()}),l()},l=function(a){var b;d.status.concentrationMarker&&a?(b={service:d.status.apiProvider.serviceID,phenomenon:a,expanded:!0,force_latest_values:!0,status_intervals:!0},c.getTimeseries(null,d.status.apiProvider.url,b).success(m)):(b={service:d.status.apiProvider.serviceID,phenomenon:a},c.getStations(null,d.status.apiProvider.url,b).success(m))},m=function(a){if(angular.copy({},j.markers),angular.copy({},j.paths),angular.copy({},j.bounds),a.length>0){var c=o(a[0]),e=c[1],f=c[1],g=c[0],h=c[0];$.each(a,$.proxy(function(a,b){var c=o(b);isNaN(c[0])&&isNaN(c[1])||(c[0]>h&&(h=c[0]),c[0]<g&&(g=c[0]),c[1]>e&&(e=c[1]),c[1]<f&&(f=c[1]),d.status.concentrationMarker&&n(b)?q(c,b):p(c,b))},this)),angular.copy(b.createBoundsFromArray([[parseFloat(f),parseFloat(g)],[parseFloat(e),parseFloat(h)]]),j.bounds)}},n=function(a){return angular.isDefined(a.station)},o=function(a){return a.geometry&&a.geometry.coordinates?a.geometry.coordinates:a.station.geometry.coordinates},p=function(a,b){var c={lat:a[1],lng:a[0],icon:i};d.status.clusterStations&&(c.layer="cluster"),j.markers[b.properties.id]=c},q=function(a,b){var c=r(b),d=c&&c.color?c.color:e.defaultMarkerColor;j.paths[b.station.properties.id]={type:"circleMarker",latlngs:{lat:a[1],lng:a[0]},color:"#000",fillColor:d,fill:!0,radius:10,weight:2,opacity:1,fillOpacity:.8}},r=function(a){var b=null;if(a.lastValue&&a.statusIntervals){var c=a.lastValue.value;$.each(a.statusIntervals,function(a,d){return null===d.upper&&(d.upper=Number.MAX_VALUE),null===d.lower&&(d.lower=Number.MIN_VALUE),!isNaN(d.upper)&&!isNaN(d.lower)&&parseFloat(d.lower)<c&&c<parseFloat(d.upper)?(b=d,!1):void 0})}return b},s=function(){j.center={autoDiscover:!0,zoom:12},a.$on("leafletDirectiveMap.locationfound",function(a,b){angular.copy({content:"<p>"+f.instant("map.userLocation")+"</p>",latlng:b.leafletEvent.latlng},j.popup)}),a.$on("leafletDirectiveMap.locationerror",function(a){alert(a+a.message)})},t=function(a){a&&a.station&&g.get("templates/map/locateStation.html").success(function(b){j.popup={content:b,scope:{timeseries:a,backToDiagram:function(){h.url("/diagram")}},latlng:{lat:a.station.geometry.coordinates[1],lng:a.station.geometry.coordinates[0]}},j.center={lat:a.station.geometry.coordinates[1],lng:a.station.geometry.coordinates[0],zoom:12}})};return k(),{map:j,locateUser:s,showStation:t}}]),angular.module("n52.core.phenomena",["n52.core.interface","n52.core.status"]).controller("PhenomenonListCtrl",["$scope","PhenomenonListFactory",function(a,b){a.phenomena=b.phenomena,a.showAllPhenomenons=function(){b.setSelection()},a.showSpecificPhenomenon=function(a){b.setSelection(a)},a.isSelected=function(b){return angular.equals(b,a.phenomena.selection)}}]).factory("PhenomenonListFactory",["$rootScope","interfaceService","statusService",function(a,b,c){var d={};return d.items=[],loadPhenomena=function(){var a={service:c.status.apiProvider.serviceID};b.getPhenomena(null,c.status.apiProvider.url,a).success(function(a,b,c,e){d.items=a})},setSelection=function(b){b?(d.selection=b,a.$emit("phenomenonSelected",b)):(d.selection=null,a.$emit("allPhenomenaSelected"))},a.$on("newProviderSelected",loadPhenomena),loadPhenomena(),{setSelection:setSelection,phenomena:d}}]).controller("phenomenaButtonController",["$scope","statusService",function(a,b){a.status=b.status,a.togglePhenomena=function(){b.status.showPhenomena=!b.status.showPhenomena}}]),angular.module("n52.core.provider",["n52.core.interface","n52.core.status"]).controller("ProviderButtonCtrl",["$scope","$modal",function(a,b){a.selectProvider=function(){b.open({animation:!0,templateUrl:"templates/map/provider-list-modal.html",controller:"ProviderListModalCtrl"})}}]).controller("ProviderLabelCtrl",["$scope","providerService",function(a,b){a.selectedProvider=b.selectedProvider}]).controller("ProviderListModalCtrl",["$scope","$modalInstance","providerService",function(a,b,c){a.providerList=c.providerList,a.close=function(){b.close()},a.selectProvider=function(a){c.selectProvider(a),b.close()}}]).factory("providerService",["$rootScope","settingsService","interfaceService","statusService",function(a,b,c,d){var e=[],f={label:""};return getAllProviders=function(){angular.forEach(b.restApiUrls,function(a,g){c.getServices(g).success(function(a){angular.forEach(a,function(a){var c=!1;angular.forEach(b.providerBlackList,function(b){b.serviceID===a.id&&b.apiUrl===g&&(c=!0)}),c?console.info(g+"services/"+a.id+" is blacklisted!"):(g===d.status.apiProvider.url&&d.status.apiProvider.serviceID===a.id?(a.selected=!0,f.label=a.label):a.selected=!1,a.url=g,e.push(a))})})})},selectProvider=function(b){angular.forEach(e,function(c){b.id===c.id&&b.url===c.url?(c.selected=!0,f.label=c.label,d.status.apiProvider={url:c.url,serviceID:c.id},a.$emit("newProviderSelected")):c.selected=!1})},getAllProviders(),{providerList:e,selectedProvider:f,selectProvider:selectProvider}}]),angular.module("n52.core.station",["ui.bootstrap"]).controller("ModalStationCtrl",["$scope","$modalInstance","statusService","timeseriesService","$location","stationService","stationId","phenomenonId",function(a,b,c,d,e,f,g,h){f.determineTimeseries(g),a.isAllSelected=!0,a.station=f.station,a.phenomenonId=h,a.toggleAll=function(){angular.forEach(a.station.entry.properties.timeseries,function(b){b.selected=a.isAllSelected})},a.close=function(){b.close()},a.toggled=function(){var b=!0;angular.forEach(a.station.entry.properties.timeseries,function(a){a.selected||(b=!1)}),a.isAllSelected=b},a.addTimeseriesSelection=function(){angular.forEach(a.station.entry.properties.timeseries,function(a){a.selected&&d.addTimeseriesById(a.id,c.status.apiProvider.url)}),e.url("/diagram"),b.close()}}]).controller("StationOpenerCtrl",["$modal","$rootScope","mapService",function(a,b,c){b.$on("leafletDirectiveMarker.click",function(b,d){var e=d.modelName;a.open({animation:!0,templateUrl:"templates/map/station.html",resolve:{stationId:function(){return e},phenomenonId:function(){return c.map.selectedPhenomenonId}},controller:"ModalStationCtrl"})})}]).service("stationService",["interfaceService","statusService",function(a,b){var c={entry:{}};return determineTimeseries=function(d){c.entry={},a.getStations(d,b.status.apiProvider.url).success(function(d,e){c.entry=d,angular.forEach(d.properties.timeseries,function(c,d){a.getTimeseries(d,b.status.apiProvider.url).then(function(a){angular.extend(c,a),c.selected=!0})})})},{determineTimeseries:determineTimeseries,station:c}}]);