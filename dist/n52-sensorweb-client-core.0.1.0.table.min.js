/*! n52-sensorweb-client-core.0.1.0 */
angular.module("n52.core.table",["n52.core.timeseries","ngTable"]).controller("tableController",["$scope","$filter","ngTableParams","timeseriesService",function(a,b,c,d){createValueArray=function(){var a=[],b={},c=0;angular.forEach(d.getAllTimeseries(),function(a){var e=d.getData(a.internalId);if(e.values.length>0){var f=e.values;angular.forEach(f,function(c){var d=c[0],e=c[1];b[d]||(b[d]={time:d}),b[d][a.internalId]=e})}c++});var e=0;return angular.forEach(b,function(b,c){a[e++]=b}),a},createColumns=function(){var a=[];return a.push({phenomenon:"Zeit",field:"time",visible:!0}),angular.forEach(d.getAllTimeseries(),function(b){a.push({station:b.parameters.feature.label,phenomenon:b.parameters.phenomenon.label+" ("+b.uom+")",field:b.internalId,color:b.styles.color})}),a},createTable=function(){a.tableParams=new c({page:1,count:30,sorting:{time:"asc"}},{total:g.length,counts:[],getData:function(a,c){var d=c.sorting()?b("orderBy")(g,c.orderBy()):g;a.resolve(d.slice((c.page()-1)*c.count(),c.page()*c.count()))}})},removeOverlappingValues=function(a){for(var b=TimeController.getCurrentStartAsMillis(),c=0;a[c][0]<b;)c++;a.splice(0,c);var d=a.length-1,e=TimeController.getCurrentEndAsMillis();for(c=0;a[d][0]>e;)c++,d--;return a.splice(++d,c),a},a.loadMoreData=function(){a.tableParams.count(a.tableParams.count()+10),a.tableParams.reload()};var e=a.$on("timeseriesChanged",function(b,c){g=createValueArray(),a.columns=createColumns()}),f=a.$on("timeseriesDataChanged",function(b,c){g=createValueArray(),a.columns=createColumns(),createTable()});a.columns=createColumns(),a.$on("$destroy",function(){e(),f()});var g=createValueArray();createTable()}]).directive("whenScrollEnds",function(){return{restrict:"A",link:function(a,b,c){findParentHeightElement=function(a){return a.height()>0?a:findParentHeightElement(a.parent())};var d=findParentHeightElement(b),e=d.height(),f=100;d.scroll(function(){var b=d.prop("scrollHeight"),g=b-e;g-d.scrollTop()<=f&&a.$apply(c.whenScrollEnds)})}}});